#ifndef __CUDA_DEV__
#define __CUDA_DEV__

#include "cuda"

RUN if [ "$CUDA_VERSION_SHORT" = "9.2" ]; then \\
        apt-get update && \\
        apt-get install -y --no-install-recommends \\
            cuda-compiler-$CUDA_PKG_VERSION \\
            cuda-cupti-$CUDA_PKG_VERSION \\
            cuda-nvcc-$CUDA_PKG_VERSION && \\
        rm -rf /var/lib/apt/lists && \\
        mkdir /var/lib/apt/lists; \\
    fi

RUN apt-get update && \\
    apt-get install -y --no-install-recommends --allow-downgrades \\
        cuda-command-line-tools-$CUDA_PKG_VERSION \\
        cuda-core-$CUDA_PKG_VERSION \\
        cuda-cublas-dev-$CUDA_PKG_VERSION \\
        cuda-cudart-dev-$CUDA_PKG_VERSION \\
        cuda-cufft-dev-$CUDA_PKG_VERSION \\
        cuda-curand-dev-$CUDA_PKG_VERSION \\
        cuda-cusolver-dev-$CUDA_PKG_VERSION \\
        cuda-cusparse-dev-$CUDA_PKG_VERSION \\
        cuda-driver-dev-$CUDA_PKG_VERSION \\
        cuda-misc-headers-$CUDA_PKG_VERSION \\
        cuda-npp-dev-$CUDA_PKG_VERSION \\
        cuda-nvgraph-dev-$CUDA_PKG_VERSION \\
        cuda-nvml-dev-$CUDA_PKG_VERSION \\
        cuda-nvrtc-dev-$CUDA_PKG_VERSION && \\
    rm -rf /var/lib/apt/lists && \\
    mkdir /var/lib/apt/lists

RUN if [ "$CUDA_VERSION_SHORT" != "8.0" ] && [ "$CUDA_VERSION_SHORT" != "9.0" ]; then \\
        apt-get update && \\
        apt-get install -y --no-install-recommends \\
            cuda-nsight-$CUDA_PKG_VERSION && \\
        rm -rf /var/lib/apt/lists && \\
        mkdir /var/lib/apt/lists; \\
    fi

RUN if [ "$CUDA_VERSION_SHORT" = "10.0" ]; then \\
        apt-get update && \\
        apt-get install -y --no-install-recommends \\
            cuda-nsight-compute-$CUDA_PKG_VERSION && \\
        rm -rf /var/lib/apt/lists && \\
        mkdir /var/lib/apt/lists; \\
    fi

#endif // __CUDA_DEV__
